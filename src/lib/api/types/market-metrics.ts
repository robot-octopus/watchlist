/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/market-metrics': {
    /** Returns an array of volatility data for given symbols. */
    get: operations['getMarketMetricsIndex'];
  };
  '/market-metrics/historic-corporate-events/dividends/{symbol}': {
    /** Get historical dividend data */
    get: operations['getMarketMetricsDividendsSymbol'];
  };
  '/market-metrics/historic-corporate-events/earnings-reports/{symbol}': {
    /** Get historical earnings data */
    get: operations['getMarketMetricsEarningsSymbol'];
  };
}

export interface definitions {
  DividendInfo: {
    /**
     * Format: date
     * @description Date of dividend
     */
    'occurred-date'?: string;
    /**
     * Format: float
     * @description Per share amount
     */
    amount?: number;
  };
  EarningsInfo: {
    /**
     * Format: date
     * @description Date of earnings announcement
     */
    'occurred-date'?: string;
    /**
     * Format: float
     * @description Earnings per share amount
     */
    eps?: number;
  };
  /** @description Includes underlying volatility and liquidity data as well as option volatility data. */
  MarketMetricInfo: {
    /** @description Symbol */
    symbol?: string;
    /**
     * Format: float
     * @description IV Index of underlying
     */
    'implied-volatility-index'?: number;
    /**
     * Format: float
     * @description 5 day change of IV index of underlying
     */
    'implied-volatility-index-5-day-change'?: number;
    /**
     * Format: float
     * @description IV Rank of underlying
     */
    'implied-volatility-rank'?: number;
    /**
     * Format: float
     * @description IV percentile of underlying
     */
    'implied-volatility-percentile'?: number;
    /**
     * Format: float
     * @description liquidity of underlying
     */
    liquidity?: number;
    /**
     * Format: float
     * @description liquidity rank of underlying
     */
    'liquidity-rank'?: number;
    /**
     * Format: int32
     * @description liquidity rating of underlying
     */
    'liquidity-rating'?: number;
    /** @description List of option volatility data */
    'option-expiration-implied-volatilities'?: {
      /**
       * Format: date-time
       * @description Option expiration date
       */
      'expiration-date'?: string;
      /** @description AM or PM settlement */
      'settlement-type'?: string;
      /** @description Option chain type i.e. Standard or Non-standard. */
      'option-chain-type'?: string;
      /**
       * Format: double
       * @description Implied volatility of option expiration
       */
      'implied-volatility'?: number;
    }[];
  };
}

export interface operations {
  /** Returns an array of volatility data for given symbols. */
  getMarketMetricsIndex: {
    parameters: {
      query: {
        /** Comma separated list of symbols i.e. ?symbols=AAPL,FB,BRK%2FB */
        symbols: string;
      };
    };
    responses: {
      /** Returns an array of volatility data for given symbols. */
      200: {
        schema: definitions['MarketMetricInfo'][];
      };
    };
  };
  /** Get historical dividend data */
  getMarketMetricsDividendsSymbol: {
    parameters: {
      path: {
        /** Symbol to get dividends data for */
        symbol: string;
      };
    };
    responses: {
      /** Array of historical dividend data */
      200: {
        schema: definitions['DividendInfo'][];
      };
    };
  };
  /** Get historical earnings data */
  getMarketMetricsEarningsSymbol: {
    parameters: {
      path: {
        /** Symbol to get earnings data for */
        symbol: string;
      };
      query: {
        /** Limits earnings data from start-date until now */
        'start-date': string;
        /** Limits earnings data from start-date until end-date */
        'end-date'?: string;
      };
    };
    responses: {
      /** Array of historical earnings data */
      200: {
        schema: definitions['EarningsInfo'][];
      };
    };
  };
}

export interface external {}
